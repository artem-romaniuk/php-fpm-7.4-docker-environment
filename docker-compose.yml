version: '3'

services:
  nginx:
    build: build/nginx
    container_name: "${DOCKER_PREFIX}-nginx"
    restart: unless-stopped
    tty: true
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_PORT_SSL}:443
    depends_on:
      - php
    volumes:
      - ./build/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./build/nginx/conf.d:/etc/nginx/conf.d
      - ./build/nginx/log:/var/log/nginx
      - ./www:/var/www

  php:
    build: build/php
    container_name: "${DOCKER_PREFIX}-php"
    restart: unless-stopped
    tty: true
    expose:
      - ${PHP_PORT}
    depends_on:
      - mysql
      - mariadb
      - postgres
      - redis
    volumes:
      - ./www:/var/www
      - ./build/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./build/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./build/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./build/php/log:/log

  mysql:
    build: build/mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: "${DOCKER_PREFIX}-mysql"
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_DB_PASSWORD}
      - MYSQL_USER=${MYSQL_DB_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_DB_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DB_DATABASE}

  mariadb:
    build: build/mariadb
    container_name: "${DOCKER_PREFIX}-mariadb"
    restart: unless-stopped
    tty: true
    ports:
      - ${MARIADB_PORT}:3306
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_DB_PASSWORD}
      - MYSQL_USER=${MARIADB_DB_USERNAME}
      - MYSQL_PASSWORD=${MARIADB_DB_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DB_DATABASE}

  postgres:
    build: build/postgres
    container_name: "${DOCKER_PREFIX}-postgres"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  redis:
    build: build/redis
    container_name: "${DOCKER_PREFIX}-redis"
    restart: unless-stopped
    hostname: redis
    #command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./build/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379

  adminer:
    build: build/adminer
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080

#  node:
#    build: build/node
#    restart: unless-stopped
#    working_dir: /home/node/app
#    environment:
#      - NPM_CONFIG_LOGLEVEL=${NPM_CONFIG_LOGLEVEL}
#      - NODE_ENV={NODE_ENV}
#    volumes:
#      - ./node/:/home/node/app
#    ports:
#      - ${NODE_PORT}:3000
#    command: "npm start"
